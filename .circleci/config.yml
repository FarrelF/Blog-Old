executors:
  python:
    docker:
      - image: circleci/python:3.7.4-node

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restoring Python Packages Cache
      keys: 
        - v1-cache-key-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "poetry.lock" }}-{{ checksum "yarn.lock" }}

  install_node_modules: &install_node_modules
    run:
      name: Installing NodeJS Dependencies
      command: yarn install
  
  install_locales: &install_locales
    run:
      name: Installing the System Locales
      command: |
          sudo apt install locales locales-all
          sudo sed -i 's/id_ID\s.*$/id_ID id_ID.utf8/g' /usr/share/locale/locale.alias
          sudo sed -i 's/# id_ID\.UTF-8/id_ID\.UTF-8/' /etc/locale.gen
          sudo update-locale LANG=C.UTF-8 LC_MESSAGES=POSIX
          DEBIAN_FRONTEND=noninteractive sudo -E dpkg-reconfigure locales

  install_dependencies: &install_dependencies
    run:
      name: Installing All Packages and it's Dependencies
      command: |
          sudo -H python3.7 -m pip install --upgrade pip
          sudo -H python3.7 -m pip install poetry
          poetry config settings.virtualenvs.create false
          poetry install --no-dev
  
  install_netlify: &install_netlify
    run:
      name: Install Netlify Globally with Yarn
      command: |
          echo 'export PATH=$(yarn global bin):$PATH' >> $BASH_ENV
          source $BASH_ENV
          yarn global add netlify-cli
  
  deploy_netlify: &deploy_netlify
    run:
      name: Deploying with Netlify
      command: netlify deploy --dir=./output -p
  
  deploy_netlify_preview: &deploy_netlify_preview
    run:
      name: Deploying with Netlify (Preview Mode)
      command: ls -l $(yarn global bin) && ls -l ~/.config/yarn/global/node_modules/.bin/ && netlify deploy --dir=./output

  changing_permission: &changing_permission
    run:
      name: Changing the Permissions
      command: |
          [[ ! -d /usr/local/bin ]] || \
            sudo chown -R circleci:circleci /usr/local/bin
          [[ ! -d /usr/local/lib/python3.7/site-packages ]] || \
            sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages

  publish_blog: &publish_blog
    run:
      name: Publishing the Blog (Production Blog)
      command: make REBUILD=1 publish
  
  build_html: &build_html
    run:
      name: Building the Blog HTML (Not an Production Blog)
      command: make devtheme && make REBUILD=1 preview

  save_cache: &save_cache
    save_cache: 
      name: Saving Python Packages Cache
      key: v1-cache-key-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "poetry.lock" }}-{{ checksum "yarn.lock" }}
      paths:
        - "~/.venv"
        - "/usr/local/lib/python3.7/site-packages"
        - "~/.cache"

  save_netlify_cache: &save_netlify_cache
    save_cache:
      name: Saving Netlify Cache
      key: netlify-cache-{{ checksum "pyproject.toml" }}-{{ checksum "package.json" }}-{{ checksum ".circleci/config.yml" }}-v1
      paths:
        - "~/.yarn/bin"
        - "~/.config/yarn/global/node_modules/.bin"
        - "~/.cache/yarn"
  
  save_local_bin_cache: &save_local_bin_cache
    save_cache:
      name: Saving /usr/local/bin Cache
      key: usr-local-bin-cache-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "poetry.lock" }}-{{ checksum "yarn.lock" }}-v1
      paths:
        - "/usr/local/bin"
  
  restore_local_bin_cache: &restore_local_bin_cache
    restore_cache:
      name: Restoring /usr/local/bin Cache
      keys:
        - usr-local-bin-cache-{{ .Branch }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "poetry.lock" }}-{{ checksum "yarn.lock" }}-v1
  
  restore_netlify_cache: &restore_netlify_cache
    restore_cache:
      name: Restoring Netlify Cache
      keys:
        - netlify-cache-{{ checksum "pyproject.toml" }}-{{ checksum "package.json" }}-{{ checksum ".circleci/config.yml" }}-v1

version: 2.1

jobs:
  test:
    executor: python
    steps:
      - checkout
      - <<: *install_locales
      - <<: *changing_permission
      - <<: *restore_cache
      - <<: *restore_local_bin_cache
      - <<: *install_dependencies
      - <<: *save_cache
      - <<: *build_html
      - <<: *restore_netlify_cache
      - <<: *install_netlify
      - <<: *save_netlify_cache
      - <<: *save_local_bin_cache
      - <<: *deploy_netlify_preview

  build:
    executor: python
    steps:
      - checkout
      - <<: *install_locales
      - <<: *changing_permission
      - <<: *restore_cache
      - <<: *restore_local_bin_cache
      - <<: *install_dependencies
      - <<: *publish_blog
      - persist_to_workspace:
          root: "./"
          paths: 
            - "output"

  deploy:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *changing_permission
      - <<: *restore_netlify_cache
      - <<: *restore_local_bin_cache
      - <<: *install_netlify
      - <<: *deploy_netlify

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
                - drafts
      - build:
          requires: 
            - "test"
      - deploy: 
          requires:
            - "build"
          filters:
            branches:
              only: "master"
